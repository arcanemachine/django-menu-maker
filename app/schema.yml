openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/api-token-auth/:
    post:
      operationId: api_v1_api_token_auth_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/v1/dj-rest-auth/login/:
    post:
      operationId: api_v1_dj_rest_auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/v1/dj-rest-auth/logout/:
    post:
      operationId: api_v1_dj_rest_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/dj-rest-auth/password/change/:
    post:
      operationId: api_v1_dj_rest_auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/dj-rest-auth/password/reset/:
    post:
      operationId: api_v1_dj_rest_auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/dj-rest-auth/password/reset/confirm/:
    post:
      operationId: api_v1_dj_rest_auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/dj-rest-auth/registration/:
    post:
      operationId: api_v1_dj_rest_auth_registration_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/v1/dj-rest-auth/registration/verify-email/:
    post:
      operationId: api_v1_dj_rest_auth_registration_verify_email_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/dj-rest-auth/user/:
    get:
      operationId: api_v1_dj_rest_auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    put:
      operationId: api_v1_dj_rest_auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    patch:
      operationId: api_v1_dj_rest_auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
  /api/v1/restaurants/:
    get:
      operationId: api_v1_restaurants_list
      description: ''
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
          description: ''
    post:
      operationId: api_v1_restaurants_create
      description: ''
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
  /api/v1/restaurants/{restaurant_pk}/:
    get:
      operationId: api_v1_restaurants_retrieve
      description: ''
      parameters:
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
    put:
      operationId: api_v1_restaurants_update
      description: ''
      parameters:
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
    patch:
      operationId: api_v1_restaurants_partial_update
      description: ''
      parameters:
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRestaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRestaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRestaurant'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
    delete:
      operationId: api_v1_restaurants_destroy
      description: ''
      parameters:
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/restaurants/{restaurant_pk}/menus/:
    get:
      operationId: api_v1_restaurants_menus_list
      description: ''
      parameters:
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
          description: ''
    post:
      operationId: api_v1_restaurants_menus_create
      description: ''
      parameters:
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
  /api/v1/restaurants/{restaurant_pk}/menus/{menu_pk}/:
    get:
      operationId: api_v1_restaurants_menus_retrieve
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    put:
      operationId: api_v1_restaurants_menus_update
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    patch:
      operationId: api_v1_restaurants_menus_partial_update
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    delete:
      operationId: api_v1_restaurants_menus_destroy
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/restaurants/{restaurant_pk}/menus/{menu_pk}/sections/:
    get:
      operationId: api_v1_restaurants_menus_sections_list
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuSection'
          description: ''
    post:
      operationId: api_v1_restaurants_menus_sections_create
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuSection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuSection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuSection'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuSection'
          description: ''
  /api/v1/restaurants/{restaurant_pk}/menus/{menu_pk}/sections/{menusection_pk}/:
    get:
      operationId: api_v1_restaurants_menus_sections_retrieve
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: menusection_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuSection'
          description: ''
    put:
      operationId: api_v1_restaurants_menus_sections_update
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: menusection_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuSection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuSection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuSection'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuSection'
          description: ''
    patch:
      operationId: api_v1_restaurants_menus_sections_partial_update
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: menusection_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMenuSection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMenuSection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMenuSection'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuSection'
          description: ''
    delete:
      operationId: api_v1_restaurants_menus_sections_destroy
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: menusection_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/restaurants/{restaurant_pk}/menus/{menu_pk}/sections/{menusection_pk}/items/:
    get:
      operationId: api_v1_restaurants_menus_sections_items_list
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: menusection_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem'
          description: ''
    post:
      operationId: api_v1_restaurants_menus_sections_items_create
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: menusection_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
  /api/v1/restaurants/{restaurant_pk}/menus/{menu_pk}/sections/{menusection_pk}/items/{menuitem_pk}/:
    get:
      operationId: api_v1_restaurants_menus_sections_items_retrieve
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: menuitem_pk
        schema:
          type: integer
        required: true
      - in: path
        name: menusection_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    put:
      operationId: api_v1_restaurants_menus_sections_items_update
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: menuitem_pk
        schema:
          type: integer
        required: true
      - in: path
        name: menusection_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    patch:
      operationId: api_v1_restaurants_menus_sections_items_partial_update
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: menuitem_pk
        schema:
          type: integer
        required: true
      - in: path
        name: menusection_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    delete:
      operationId: api_v1_restaurants_menus_sections_items_destroy
      description: ''
      parameters:
      - in: path
        name: menu_pk
        schema:
          type: integer
        required: true
      - in: path
        name: menuitem_pk
        schema:
          type: integer
        required: true
      - in: path
        name: menusection_pk
        schema:
          type: integer
        required: true
      - in: path
        name: restaurant_pk
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    Menu:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        menusection_set:
          type: array
          items:
            type: integer
          readOnly: true
        restaurant_name:
          type: string
          readOnly: true
      required:
      - id
      - menusection_set
      - restaurant_name
    MenuItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        description:
          type: string
          maxLength: 1024
        restaurant_name:
          type: string
          readOnly: true
        menu_name:
          type: string
          readOnly: true
        menusection_name:
          type: string
          readOnly: true
      required:
      - id
      - menu_name
      - menusection_name
      - restaurant_name
    MenuSection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        menuitem_set:
          type: array
          items:
            type: integer
          readOnly: true
        restaurant_name:
          type: string
          readOnly: true
        menu_name:
          type: string
          readOnly: true
      required:
      - id
      - menu_name
      - menuitem_set
      - restaurant_name
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedMenu:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        menusection_set:
          type: array
          items:
            type: integer
          readOnly: true
        restaurant_name:
          type: string
          readOnly: true
    PatchedMenuItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        description:
          type: string
          maxLength: 1024
        restaurant_name:
          type: string
          readOnly: true
        menu_name:
          type: string
          readOnly: true
        menusection_name:
          type: string
          readOnly: true
    PatchedMenuSection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        menuitem_set:
          type: array
          items:
            type: integer
          readOnly: true
        restaurant_name:
          type: string
          readOnly: true
        menu_name:
          type: string
          readOnly: true
    PatchedRestaurant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        admin_users:
          type: array
          items:
            type: integer
          readOnly: true
        menu_set:
          type: array
          items:
            type: integer
          readOnly: true
    PatchedUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - password1
      - password2
      - username
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    Restaurant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        admin_users:
          type: array
          items:
            type: integer
          readOnly: true
        menu_set:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - admin_users
      - id
      - menu_set
    Token:
      type: object
      description: Serializer for Token model.
      properties:
        key:
          type: string
          maxLength: 40
      required:
      - key
    UserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - pk
      - username
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
      required:
      - key
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
    tokenAuth:
      type: http
      scheme: bearer
      bearerFormat: Token
